/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>



/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |    |  Y  |  U   |  I  |  O  |  P  | DEL  |
// | SHIFT|  A  |  S  |  D  |  F  |  G  |    |  H  |  J   |  K  |  L  |  '  | TAB  |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |    |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                    | GUI | LWR | BKSP |   | SPC | RSE  | OPT |
                        bindings = <
&kp ESC      &kp Q   &kp W    &kp E    &kp R      &kp T           &kp Y      &kp U   &kp I     &kp O     &kp P       &kp DEL
&sk LSHIFT   &kp A   &kp S    &kp D    &kp F      &kp G           &kp H      &kp J   &kp K     &kp L     &kp SQT     &kp TAB
&kp LCTRL    &kp Z   &kp X    &kp C    &kp V      &kp B           &kp N      &kp M   &kp COMMA &kp DOT   &kp FSLH    &kp RET
                                 &kp LGUI &mo 1      &kp BSPC        &kp SPACE  &mo 2   &kp LALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | ulqd |     |2/3lf|centr|2/3rt| urqd|   |  =  |  7  |  8  |  9  |  *  |      |
// | BTCLR|     |hf lf| full|hf rt| nxt |   |  -  |  4  |  5  |  6  |  +  |      |
// | blqd |     |1/3lf|1/3md|1/3rt| brqd|   |  0  |  1  |  2  |  3  |  /  |      |
//                    | GUI |     |     |   |     |     |     |
                        bindings = <
                                                                                                                                                                                                                
&trans       &kp PG_UP     &kp LS(LG(LBKT))     &kp UP      &kp LS(LG(RBKT))    &kp C_VOL_UP            &kp LC(LA(U))    &kp LC(LA(W))       &kp LC(LA(E))     &kp LC(LA(R))     &kp LC(LA(I))   &trans      
&trans       &kp HOME      &kp LEFT             &kp DOWN    &kp RIGHT           &kp C_MUTE              &trans           &kp LC(LA(LEFT))    &kp LC(LA(RET))   &kp LC(LA(RIGHT)) &kp LC(LA(L))   &trans
&trans       &kp PG_DN     &kp LG(LBKT)         &kp END     &kp LG(RBKT)        &kp C_VOL_DN            &kp LC(LA(J))    &kp LC(LA(X))       &kp LC(LA(C))     &kp LC(LA(V))     &kp LC(LA(K))   &trans        
                                                &trans      &trans              &trans                  &trans           &trans              &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  %  |  &  |  (  |  )  |  ?  |   |volup|tab_l| up  |tab_r|     |      |
// | CTRL |  `  |  ;  |  :  |  '  |  "  |   | mute| lft | dn  | rgt |     |      |
// | SHFT |  #  |  $  |  @  |  !  |  _  |   |voldn| bck |     |frwd |     |      |
//                    |     |     |     |   |     |     | ALT |
                        bindings = <
&trans  &kp RBKT    &kp PERCENT  &kp AT       &kp RPAR   &kp QMARK          &kp MINUS   &kp N7   &kp N8   &kp N9   &kp ASTRK  &trans
&trans  &kp LBKT    &kp SEMI     &kp COLON    &kp LPAR   &kp AMPS           &kp N0      &kp N4   &kp N5   &kp N6   &kp EQUAL  &trans
&trans  &kp HASH    &kp GRAVE    &kp DOLLAR   &kp UNDER  &kp EXCL           &kp PLUS    &kp N1   &kp N2   &kp N3   &kp SLASH  &trans
                    	         &trans       &trans     &trans             &trans      &trans   &trans
                        >;
                };

                tri_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  =  |  7  |  8  |  9  |  *  |      |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  -  |  4  |  5  |  6  |  +  |      |
// | SHFT |     |     |     |     |     |   |  0  |  1  |  2  |  3  |  /  |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&reset          &trans        &trans            &trans          &trans           &trans                 &trans  &trans  &trans  &trans  &trans  &kp LC(PG_UP)
&trans          &bt BT_CLR    &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3           &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans            &trans          &trans           &bt BT_SEL 4           &trans  &trans  &trans  &trans  &trans  &kp LC(PG_DN)
                          	                &bootloader     &trans           &trans                 &trans  &trans  &trans 
                        >;
                };

        };
};
