/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |    |  Y  |  U   |  I  |  O  |  P  | DEL  |
// | SHIFT|  A  |  S  |  D  |  F  |  G  |    |  H  |  J   |  K  |  L  |  '  | TAB  |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |    |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                    | GUI | LWR | BKSP |   | SPC | RSE  | OPT |
                        bindings = <
   &kp ESC      &kp Q   &kp W    &kp E    &kp R      &kp T           &kp Y      &kp U   &kp I     &kp O     &kp P       &kp DEL
   &sk LSHIFT   &kp A   &kp S    &kp D    &kp F      &kp G           &kp H      &kp J   &kp K     &kp L     &kp SQT     &kp TAB
   &kp LCTRL    &kp Z   &kp X    &kp C    &kp V      &kp B           &kp N      &kp M   &kp COMMA &kp DOT   &kp FSLH    &kp RET
                                 &kp LGUI &mo 1      &kp BSPC        &kp SPACE  &mo 2   &kp LALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  =  |  7  |  8  |  9  |  *  |      |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  -  |  4  |  5  |  6  |  +  |      |
// | SHFT |     |     |     |     |     |   |  0  |  1  |  2  |  3  |  /  |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp EQUAL   &kp N7   &kp N8  &kp N9   &kp ASTERISK  &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp MINUS   &kp N4   &kp N5  &kp N6   &kp PLUS      &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &kp N0      &kp N1   &kp N2  &kp N3   &kp SLASH     &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET     &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  %  |  &  |  (  |  )  |  ?  |   |volup|tab_l| up  |tab_r|     |      |
// | CTRL |  `  |  ;  |  :  |  '  |  "  |   | mute| lft | dn  | rgt |     |      |
// | SHFT |  #  |  $  |  @  |  !  |  _  |   |voldn| bck |     |frwd |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB   &kp PERCENT &kp AMPS  &kp LPAR  &kp RPAR  &kp QMARK       &kp C_VOL_UP      &kp AMPS   &kp UP     &kp LPAR   &kp RPAR  &kp BSPC
   &kp LCTRL  &kp GRAVE   &kp SEMI  &kp COLON &kp SQT   &kp DQT         &kp C_MUTE        &kp LEFT   &kp DOWN   &kp RIGHT  &kp BSLH  &kp GRAVE
   &kp LSHFT  &kp HASH    &kp DLLR  &kp AT    &kp EXCL  &kp UNDER       &kp C_VOLUME_DOWN &kp PLUS   &kp LBRC   &kp RBRC   &kp PIPE  &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE    &kp RET   &trans    &kp RALT
                        >;
                };

                tri_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  %  |  &  |  (  |  )  |  ?  |   |volup|tab_l| up  |tab_r|     |      |
// | CTRL |  1  |  ;  |  :  |  '  |  "  |   | mute| lft | dn  | rgt |     |      |
// | SHFT |  #  |  $  |  @  |  !  |  _  |   |voldn| bck |     |frwd |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB   &kp PERCENT &kp AMPS  &kp LPAR  &kp RPAR  &kp QMARK       &kp C_VOL_UP      &kp AMPS   &kp UP     &kp LPAR   &kp RPAR  &kp BSPC
   &kp LCTRL  &kp N1   &kp N2  &kp COLON &kp SQT   &kp DQT         &kp C_MUTE        &kp LEFT   &kp DOWN   &kp RIGHT  &kp BSLH  &kp GRAVE
   &kp LSHFT  &kp HASH    &kp DLLR  &kp AT    &kp EXCL  &kp UNDER       &kp C_VOLUME_DOWN &kp PLUS   &kp LBRC   &kp RBRC   &kp PIPE  &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE    &kp RET   &trans    &kp RALT
                        >;
                };

        };
};
